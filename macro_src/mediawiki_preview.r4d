% mod
$define(mod_mediawiki_preview=)

% Macros 

% Subsitue with markdown compatible image form 
% Convert contents into single lined html
% This was intended for multi line support in csv table
% TODO
% This is a crude conversion, not real conversion
$define(m_newline_to_br,a_scell=$regex($a_scell(),$nl(),<br>))

% ==========
% User interface macros 

% TOC
$define(toc,a_count a_text=<span class="tocnumber">$a_count()</span><span><a href="#$a_text()">$a_text()</a></span>)

% Basic syntax macros
% Headers
$define(h1,a_content=<h1 id="$a_content()">$a_content()</h1>)
$define(h2,a_content=<h2 id="$a_content()">$a_content()</h2>)
$define(h3,a_content=<h3 id="$a_content()">$a_content()</h3>)
$define(h4,a_content=<h4 id="$a_content()">$a_content()</h4>)
$define(h5,a_content=<h5 id="$a_content()">$a_content()</h5>)

% Bold 
$define(b,a_content=**$a_content()**)

% Italic 
$define(i,a_content=*$a_content()*)

% ItalicBold 
$define(bi,a_content=***$a_content()***)

% Strike through
$define(st,a_content=~~$a_content()~~)

% Underline
$define(ud,a_content=__$a_content()__)

% Indentation
% WARNING : Single spaces between if else bracket end and macro define bracket end
% is necessary, do not erase it.
$define(idt,a_count=$forloop(    ,2,$a_count()))

% Lists
% Unordered List
% Emtpry ul is same with level 1 
$define(ul,a_count=$forloop(    ,2,$a_count())*)

% Ordered list
$define(ol,a_count=$forloop(    ,2,$a_count())1.)

% Paragraph
$define(p,a_content=<p>$a_content()</p>)

% URL
$define(url,a_src a_text=[$a_text()]($a_src())) 

% Image substitue macros
$define(image,a_src=<img src="$a_src()" style="object-fit: scale-down; max-height: 100%;"/>
$ifenv(MW_UPLOAD,$update($a_src())))

% MACRO >>> Text macro that also sets font size for the text
$define(text,a_font_size a_content=<div style="font-size : $a_font_size();">$a_content()</div>)

$define(text_color,a_color a_content=<span style="color:$a_color()">$a_content()</span>)

% Content should not be evalued twice, thus should be escaped
$define(black,a_content=$text_color($COLOR_BLACK(),$a_content*()))
$define(red,a_content=$text_color($COLOR_RED(),$a_content*()))
$define(green,a_content=$text_color($COLOR_GREEN(),$a_content*()))
$define(blue,a_content=$text_color($COLOR_BLUE(),$a_content*()))
$define(yellow,a_content=$text_color($COLOR_YELLOW(),$a_content*()))
$define(magenta,a_content=$text_color($COLOR_MAGENTA(),$a_content*()))
$define(cyan,a_content=$text_color($COLOR_CYAN(),$a_content*()))
$define(white,a_content=$text_color($COLOR_WHITE(),$a_content*()))

% TOC macro
% This simply declares macro
% toc macro should not be nested because it should print literal toc_include
% This behaviour might change according to rad update though
$define(make_toc=
$declare(TOC_LIST)
$pause(true)
$toc_include()
$pause(false)
)

% Escape because everything was processed before
$define(toc_include=
<div id="toc" class="toc" role="navigation">
	<div class="toctitle" dir="ltr" lang="en">
	<h2 id="mw-toc-heading">Contents</h2>
		<span class="toctogglespan">
			<label class="toctogglelabel" for="toctogglecheckbox">
			[hide]
			</label>
		</span>
	</div>
	$forline^($toc($a_LN(),$index(1,$:())),$TOC_LIST())
</div>
$escape())
